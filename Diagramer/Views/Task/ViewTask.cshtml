@using Diagramer.Models.Enums
@using Diagramer.Configuration
@using Task = Diagramer.Models.Task
@model Diagramer.Models.ViewModels.ViewTaskViewModel;
@{
    ViewData["Title"] = "Task Page";

}

<div>
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom">
        <h1 class="h2">@Model.Task.Name</h1>

        @if (User.IsInRole("Teacher") || User.IsInRole("Admin"))
        {
            <div class="btn-toolbar mb-2 mb-md-0">
                <div class="btn-group mr-2">
                    <button class="btn btn-sm btn-outline-secondary" disabled>@(Model.Task.IsVisible == true ? "открыто" : "скрыто")</button>
                    <a class="btn btn-sm btn-outline-dark" href='@Url.Action("ChangeTaskVisibility", new { task_id = @Model.Task.Id })'>Изменить видимость задания для студентов</a>
                    <a class="btn btn-sm btn-outline-dark" href='@Url.Action("ViewAnswersOnTask", new { task_id = @Model.Task.Id })'>Просмотреть ответы студентов</a>
                    @if (@Model.Task.IsGroupTask)
                    {
                        <a class="btn btn-sm btn-outline-dark" href='@Url.Action("TaskGroups", new { task_id = @Model.Task.Id })'>Группы</a>
                    }
                    <a class="btn btn-sm btn-outline-success" href='@Url.Action("EditTask", new { task_id = @Model.Task.Id })'>Редактировать задание</a>
                </div>
            </div>
        }

    </div>
    <span>@Model.Task.Description</span>

    @if (@Model.UserAnswer?.Comment != null)
    {
        <hr>
        <h2>Комментарий:</h2>
        <p>@Model.UserAnswer.Comment</p>
    }
    @if (@Model.Task.Deadline is not null)
    {
        <h3>Срок сдачи до <u>@Model.Task.Deadline.ToString()</u></h3>
    }
    @if (@Model.Task.Diagram is not null)
    {
        <a href='@Url.RouteUrl("Diagrammer", new { diagramId = @Model.Task.Diagram.Id, editable = false })'>Просмотреть диаграмму преподавателя</a>
    }
    @if (@Model.UserAnswer?.TeacherDiagram != null)
    {
        <a href='@Url.RouteUrl("Diagrammer", new { diagramId = @Model.UserAnswer.TeacherDiagram.Id, editable = false })'>Просмотреть правки преподавателя</a>
    }
    @if (@Model.UserAnswer == null && !@Model.Task.IsGroupTask)
    {
        <a href='@Url.Action("CreateAnswer", "Answer", new { taskId = @Model.Task.Id, taskType = TaskTypeEnum.Individual })'>Создать диаграмму</a>
    }
    else if (@Model.UserAnswer == null && @Model.Task.IsGroupTask)
    {
        <a href='@Url.Action("CreateAnswer", "Answer", new { taskId = @Model.Task.Id, taskType = TaskTypeEnum.Group })'>Создать диаграмму</a>
    }
    else if (@Model.UserAnswer.Status == AnswerStatusEnum.Finalize || @Model.UserAnswer.Status == AnswerStatusEnum.InProgress)
    {
        <a href='@Url.RouteUrl("Diagrammer", new { diagramId = @Model.UserAnswer.StudentDiagram.Id, editable = true })'>Редактировать диаграмму</a>
        <br/>
        <a href='@Url.Action("SubmitAnswerForReview", "Answer", new { answerId = @Model.UserAnswer.Id })'>Отправить диаграмму на проверку</a>
    }
    else if (@Model.UserAnswer.Status == AnswerStatusEnum.Sent)
    {
        <a href='@Url.RouteUrl("Diagrammer", new { diagramId = @Model.UserAnswer.StudentDiagram.Id, editable = false })'>Посмотреть диаграмму</a>
        <br/>
        <a href='@Url.Action("CancelAnswerSubmission", "Answer", new { answerId = @Model.UserAnswer.Id })'>Отменить отправку</a>
    }
    else if (@Model.UserAnswer.Status == AnswerStatusEnum.UnderEvaluation)
    {
        <h3>Задание проверяется преподавателем</h3>
    }
    else if (@Model.UserAnswer.Status == AnswerStatusEnum.Rated)
    {
        <h3>Оценка: @Model.UserAnswer.Mark</h3>
        <a href='@Url.RouteUrl("Diagrammer", new { diagramId = @Model.UserAnswer.StudentDiagram.Id, editable = false })'>Посмотреть диаграмму</a>
    }

</div>